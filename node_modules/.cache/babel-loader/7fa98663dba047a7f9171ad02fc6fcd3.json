{"ast":null,"code":"var _jsxFileName = \"/Users/DarshGondalia/Desktop/blogspotremastered/src/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport { Route, Navigate } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { AuthContext } from './context/AuthProvider.js'; // function PrivateRoute({ children} : { children: JSX.Element }) {\n//     const {auth} = useContext(AuthContext);\n//     return (\n//         <Route {...rest} render={props => {\n//             if (!auth) {\n//                 // not logged in so redirect to login page with the return url\n//                 return <Navigate to={{ pathname: '/login', state: { from: props.location } }} />\n//             }\n//             // authorized so return component\n//             return <Component {...props} />\n//         }} />\n//     );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    auth\n  } = useContext(AuthContext);\n  return !auth ? /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 20\n  }, this) : children;\n};\n\n_s(PrivateRoute, \"uMxshdEHcVn5hGKM7T+8HCaYP1w=\");\n\n_c = PrivateRoute;\nexport { PrivateRoute };\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["Route","Navigate","useContext","AuthContext","PrivateRoute","children","auth"],"sources":["/Users/DarshGondalia/Desktop/blogspotremastered/src/PrivateRoute.js"],"sourcesContent":["import { Route, Navigate } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { AuthContext } from './context/AuthProvider.js';\n\n// function PrivateRoute({ children} : { children: JSX.Element }) {\n//     const {auth} = useContext(AuthContext);\n//     return (\n//         <Route {...rest} render={props => {\n//             if (!auth) {\n//                 // not logged in so redirect to login page with the return url\n//                 return <Navigate to={{ pathname: '/login', state: { from: props.location } }} />\n//             }\n\n//             // authorized so return component\n//             return <Component {...props} />\n//         }} />\n//     );\n// }\nconst PrivateRoute = ({children}) => {\n    const {auth} = useContext(AuthContext);\n\n    return !auth ? <Navigate to=\"/login\" /> : children;\n}\n\n\nexport { PrivateRoute };"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,2BAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,YAAY,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EACjC,MAAM;IAACC;EAAD,IAASJ,UAAU,CAACC,WAAD,CAAzB;EAEA,OAAO,CAACG,IAAD,gBAAQ,QAAC,QAAD;IAAU,EAAE,EAAC;EAAb;IAAA;IAAA;IAAA;EAAA,QAAR,GAAmCD,QAA1C;AACH,CAJD;;GAAMD,Y;;KAAAA,Y;AAON,SAASA,YAAT"},"metadata":{},"sourceType":"module"}