[{"C:\\individual projects\\blogspot\\src\\index.js":"1","C:\\individual projects\\blogspot\\src\\App.js":"2","C:\\individual projects\\blogspot\\src\\Home.js":"3","C:\\individual projects\\blogspot\\src\\Profile.js":"4","C:\\individual projects\\blogspot\\src\\Random.js":"5","C:\\individual projects\\blogspot\\src\\PrivateRoute.js":"6","C:\\individual projects\\blogspot\\src\\MyBlogs.js":"7","C:\\individual projects\\blogspot\\src\\Login.js":"8","C:\\individual projects\\blogspot\\src\\Register.js":"9","C:\\individual projects\\blogspot\\src\\context\\AuthProvider.js":"10","C:\\individual projects\\blogspot\\src\\styles\\GlobalStyles.style.js":"11","C:\\individual projects\\blogspot\\src\\components\\Navbar.js":"12","C:\\individual projects\\blogspot\\src\\styles\\variables.js":"13","C:\\individual projects\\blogspot\\src\\styles\\Button.style.js":"14","C:\\individual projects\\blogspot\\src\\components\\SearchBar.js":"15","C:\\individual projects\\blogspot\\src\\styles\\Input.style.js":"16"},{"size":485,"mtime":1659825441937,"results":"17","hashOfConfig":"18"},{"size":1993,"mtime":1659907525788,"results":"19","hashOfConfig":"18"},{"size":110,"mtime":1659555067181,"results":"20","hashOfConfig":"18"},{"size":119,"mtime":1659555067184,"results":"21","hashOfConfig":"18"},{"size":116,"mtime":1659555067184,"results":"22","hashOfConfig":"18"},{"size":873,"mtime":1659555067183,"results":"23","hashOfConfig":"18"},{"size":1045,"mtime":1659555067183,"results":"24","hashOfConfig":"18"},{"size":3043,"mtime":1659555067182,"results":"25","hashOfConfig":"18"},{"size":13183,"mtime":1659555067185,"results":"26","hashOfConfig":"18"},{"size":93,"mtime":1659555067186,"results":"27","hashOfConfig":"18"},{"size":8868,"mtime":1659911732764,"results":"28","hashOfConfig":"18"},{"size":2345,"mtime":1659911210581,"results":"29","hashOfConfig":"18"},{"size":418,"mtime":1659816161531,"results":"30","hashOfConfig":"18"},{"size":1010,"mtime":1659899037665,"results":"31","hashOfConfig":"18"},{"size":683,"mtime":1659909964129,"results":"32","hashOfConfig":"18"},{"size":1009,"mtime":1659816450155,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"qpcy2y",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\individual projects\\blogspot\\src\\index.js",[],[],[],"C:\\individual projects\\blogspot\\src\\App.js",["86"],[],"C:\\individual projects\\blogspot\\src\\Home.js",[],[],"C:\\individual projects\\blogspot\\src\\Profile.js",[],[],"C:\\individual projects\\blogspot\\src\\Random.js",[],[],"C:\\individual projects\\blogspot\\src\\PrivateRoute.js",["87"],[],"import { Route, Navigate } from 'react-router-dom';\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from './context/AuthProvider.js';\r\n\r\n// function PrivateRoute({ children} : { children: JSX.Element }) {\r\n//     const {auth} = useContext(AuthContext);\r\n//     return (\r\n//         <Route {...rest} render={props => {\r\n//             if (!auth) {\r\n//                 // not logged in so redirect to login page with the return url\r\n//                 return <Navigate to={{ pathname: '/login', state: { from: props.location } }} />\r\n//             }\r\n\r\n//             // authorized so return component\r\n//             return <Component {...props} />\r\n//         }} />\r\n//     );\r\n// }\r\nconst PrivateRoute = ({children}) => {\r\n    const {auth} = useContext(AuthContext);\r\n\r\n    return !auth ? <Navigate to=\"/login\" /> : children;\r\n}\r\n\r\n\r\nexport { PrivateRoute };","C:\\individual projects\\blogspot\\src\\MyBlogs.js",["88","89","90","91","92"],[],"import React, { useContext, useState } from 'react'\r\nimport { AuthContext } from './context/AuthProvider.js';\r\n\r\n\r\nfunction MyBlogs() {\r\n    const {auth, setAuth} = useContext(AuthContext);\r\n    const [postTitle, setPostTitle] = useState('');\r\n    const [postContent, setPostContent] = useState('');\r\n    \r\n    const handlePostSubmit = () => {\r\n            \r\n    };\r\n\r\n  \r\n    return (\r\n        <div>\r\n        <h1>Welcome to your blogs, {auth.user}!</h1>\r\n            <div>\r\n                <form onSubmit={handlePostSubmit}>\r\n                    <h6>Create your blog!</h6>\r\n                    <label>Post Title</label>\r\n                    <input \r\n                    type=\"text\" \r\n                    className='PostContent' ></input>\r\n                    <label>Post Content</label>\r\n                    <input \r\n                    type=\"text\" \r\n                    className='PostContent' ></input>\r\n                    <button>Post</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyBlogs","C:\\individual projects\\blogspot\\src\\Login.js",[],[],"C:\\individual projects\\blogspot\\src\\Register.js",["93","94"],[],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport axios from 'axios';\r\nimport \"./Login.css\";\r\n\r\nconst USER_REGEX = /^[A-z][A-z0-9-_]{3,23}$/;\r\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\r\nconst PHONE_REGEX = /^(\\+\\d{1,2}\\s?)?1?\\-?\\.?\\s?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/;\r\nconst EMAIL_REGEX = /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/;\r\n  \r\n\r\nfunction Register() {\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n\r\n    const [user, setUser] = useState('');\r\n    const [validName, setValidName] = useState(false);\r\n    const [userFocus, setUserFocus] = useState(false);\r\n\r\n    const [fullname, setFullname] = useState('');\r\n    const [validFullname, setValidFullname] = useState(false);\r\n    const [fullnameFocus, setFullnameFocus] = useState(false);\r\n\r\n    const [pwd, setPwd] = useState('');\r\n    const [validPwd, setValidPwd] = useState(false);\r\n    const [pwdFocus, setPwdFocus] = useState(false);\r\n\r\n    const [matchPwd, setMatchPwd] = useState('');\r\n    const [validMatch, setValidMatch] = useState(false);\r\n    const [matchFocus, setMatchFocus] = useState(false);\r\n\r\n    const [phone, setPhone] = useState('');\r\n    const [validPhone, setValidPhone] = useState(false);\r\n    const [phoneFocus, setPhoneFocus] = useState(false);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [validEmail, setValidEmail] = useState(false);\r\n    const [emailFocus, setEmailFocus] = useState(false);\r\n\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        userRef.current.focus();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setValidName(USER_REGEX.test(user));\r\n    }, [user])\r\n    \r\n    useEffect(() => {\r\n      setValidFullname(fullname);\r\n    }, [fullname])\r\n\r\n    useEffect(() => {\r\n        setValidPwd(PWD_REGEX.test(pwd));\r\n        setValidMatch(pwd === matchPwd);\r\n    }, [pwd, matchPwd])\r\n\r\n    useEffect(() => {\r\n      setValidPhone(PHONE_REGEX.test(phone));\r\n    }, [phone])\r\n\r\n    useEffect(() => {\r\n      setValidEmail(EMAIL_REGEX.test(email));\r\n    }, [email])\r\n\r\n    useEffect(() => {\r\n        setErrMsg('');\r\n    }, [user, pwd, matchPwd, phone])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // if button enabled with JS hack\r\n        const v1 = USER_REGEX.test(user);\r\n        const v2 = PWD_REGEX.test(pwd);\r\n        const v3 = PHONE_REGEX.test(phone);\r\n        const v4 = EMAIL_REGEX.test(email);\r\n\r\n        if (!v1 || !v2 || !v3 || !v4) {\r\n            setErrMsg(\"Invalid Entry\");\r\n            return;\r\n        }\r\n        try {\r\n          const data = JSON.stringify({ username: user, password: pwd, first_name: fullname, last_name: phone, email: email });\r\n          const response = await axios.post('http://localhost:3001/register', data, {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            }\r\n          });\r\n          console.log(response);\r\n            setSuccess(true);\r\n            setUser('');\r\n            setPwd('');\r\n            setMatchPwd('');\r\n            setEmail('');\r\n            setPhone('');\r\n        } catch (err) {\r\n            errRef.current.focus();\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {success ? (\r\n                <section>\r\n                    <h1>Success!</h1>\r\n                    <p>\r\n                    <Link className=\"NavLink\" to=\"/login\">Log In</Link>\r\n                    </p>\r\n                </section>\r\n            ) : (\r\n                <section>\r\n                    <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n                    <h1>Register</h1>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <label htmlFor=\"username\">\r\n                            Username:\r\n                            <FontAwesomeIcon icon={faCheck} className={validName ? \"valid\" : \"hide\"} />\r\n                            <FontAwesomeIcon icon={faTimes} className={validName || !user ? \"hide\" : \"invalid\"} />\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            ref={userRef}\r\n                            autoComplete=\"off\"\r\n                            onChange={(e) => setUser(e.target.value)}\r\n                            value={user}\r\n                            required\r\n                            aria-invalid={validName ? \"false\" : \"true\"}\r\n                            aria-describedby=\"uidnote\"\r\n                            onFocus={() => setUserFocus(true)}\r\n                            onBlur={() => setUserFocus(false)}\r\n                        />\r\n                        <p id=\"uidnote\" className={userFocus && user && !validName ? \"instructions\" : \"offscreen\"}>\r\n                            <FontAwesomeIcon icon={faInfoCircle} />\r\n                            4 to 24 characters.<br />\r\n                            Must begin with a letter.<br />\r\n                            Letters, numbers, underscores, hyphens allowed.\r\n                        </p>\r\n\r\n\r\n                        <label htmlFor=\"fullname\">\r\n                            Full Name:\r\n                            <FontAwesomeIcon icon={faCheck} className={validFullname ? \"valid\" : \"hide\"} />\r\n                            <FontAwesomeIcon icon={faTimes} className={validFullname || !fullname ? \"hide\" : \"invalid\"} />\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"fullname\"\r\n                            ref={userRef}\r\n                            autoComplete=\"off\"\r\n                            onChange={(e) => setFullname(e.target.value)}\r\n                            value={fullname}\r\n                            required\r\n                            aria-invalid={validFullname ? \"false\" : \"true\"}\r\n                            aria-describedby=\"fullnamenote\"\r\n                            onFocus={() => setFullnameFocus(true)}\r\n                            onBlur={() => setFullnameFocus(false)}\r\n                        />\r\n                        <p id=\"fullnamenote\" className={fullnameFocus && fullname && !validFullname ? \"instructions\" : \"offscreen\"}>\r\n                            <FontAwesomeIcon icon={faInfoCircle} />\r\n                            4 to 24 characters.<br />\r\n                            Must begin with a letter.<br />\r\n                        </p>\r\n                        \r\n                        \r\n                        <label htmlFor=\"phone\">\r\n                            Phone:\r\n                            <FontAwesomeIcon icon={faCheck} className={validPhone ? \"valid\" : \"hide\"} />\r\n                            <FontAwesomeIcon icon={faTimes} className={validPhone || !phone ? \"hide\" : \"invalid\"} />\r\n                        </label>\r\n                        <input\r\n                            type=\"tel\"\r\n                            id=\"phone\"\r\n                            ref={userRef}\r\n                            autoComplete=\"off\"\r\n                            onChange={(e) => setPhone(e.target.value)}\r\n                            value={phone}\r\n                            required\r\n                            aria-invalid={validPhone ? \"false\" : \"true\"}\r\n                            aria-describedby=\"phonenote\"\r\n                            onFocus={() => setPhoneFocus(true)}\r\n                            onBlur={() => setPhoneFocus(false)}\r\n                        />\r\n                        <p id=\"phonenote\" className={phoneFocus && phone && !validPhone ? \"instructions\" : \"offscreen\"}>\r\n                            <FontAwesomeIcon icon={faInfoCircle} />\r\n                            Enter Phone number in proper format<br />\r\n                            +Country Code (###) ### #### <br />\r\n                        </p>\r\n\r\n                        <label htmlFor=\"email\">\r\n                            Email:\r\n                            <FontAwesomeIcon icon={faCheck} className={validEmail ? \"valid\" : \"hide\"} />\r\n                            <FontAwesomeIcon icon={faTimes} className={validEmail || !email ? \"hide\" : \"invalid\"} />\r\n                        </label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            ref={userRef}\r\n                            autoComplete=\"off\"\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            value={email}\r\n                            required\r\n                            aria-invalid={validEmail ? \"false\" : \"true\"}\r\n                            aria-describedby=\"emailnote\"\r\n                            onFocus={() => setEmailFocus(true)}\r\n                            onBlur={() => setEmailFocus(false)}\r\n                        />\r\n                        <p id=\"emailnote\" className={emailFocus && email && !validEmail ? \"instructions\" : \"offscreen\"}>\r\n                            <FontAwesomeIcon icon={faInfoCircle} />\r\n                            Enter a valid email<br />\r\n                        </p>\r\n\r\n\r\n                        <label htmlFor=\"password\">\r\n                            Password:\r\n                            <FontAwesomeIcon icon={faCheck} className={validPwd ? \"valid\" : \"hide\"} />\r\n                            <FontAwesomeIcon icon={faTimes} className={validPwd || !pwd ? \"hide\" : \"invalid\"} />\r\n                        </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            onChange={(e) => setPwd(e.target.value)}\r\n                            value={pwd}\r\n                            required\r\n                            aria-invalid={validPwd ? \"false\" : \"true\"}\r\n                            aria-describedby=\"pwdnote\"\r\n                            onFocus={() => setPwdFocus(true)}\r\n                            onBlur={() => setPwdFocus(false)}\r\n                        />\r\n                        <p id=\"pwdnote\" className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}>\r\n                            <FontAwesomeIcon icon={faInfoCircle} />\r\n                            8 to 24 characters.<br />\r\n                            Must include uppercase and lowercase letters, a number and a special character.<br />\r\n                            Allowed special characters: <span aria-label=\"exclamation mark\">!</span> <span aria-label=\"at symbol\">@</span> <span aria-label=\"hashtag\">#</span> <span aria-label=\"dollar sign\">$</span> <span aria-label=\"percent\">%</span>\r\n                        </p>\r\n\r\n\r\n                        <label htmlFor=\"confirm_pwd\">\r\n                            Confirm Password:\r\n                            <FontAwesomeIcon icon={faCheck} className={validMatch && matchPwd ? \"valid\" : \"hide\"} />\r\n                            <FontAwesomeIcon icon={faTimes} className={validMatch || !matchPwd ? \"hide\" : \"invalid\"} />\r\n                        </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"confirm_pwd\"\r\n                            onChange={(e) => setMatchPwd(e.target.value)}\r\n                            value={matchPwd}\r\n                            required\r\n                            aria-invalid={validMatch ? \"false\" : \"true\"}\r\n                            aria-describedby=\"confirmnote\"\r\n                            onFocus={() => setMatchFocus(true)}\r\n                            onBlur={() => setMatchFocus(false)}\r\n                        />\r\n                        <p id=\"confirmnote\" className={matchFocus && !validMatch ? \"instructions\" : \"offscreen\"}>\r\n                            <FontAwesomeIcon icon={faInfoCircle} />\r\n                            Must match the first password input field.\r\n                        </p>\r\n\r\n\r\n                        <button className='loginFormButton' disabled={!validName || !validPwd || !validMatch || !validPhone ? true : false}>Sign Up</button>\r\n                    </form>\r\n                    <p>\r\n                        Already registered?<br />\r\n                        <span className=\"line\">\r\n                            {/*put router link here*/}\r\n                            <Link className=\"NavLink\" to=\"/login\">Log In</Link>\r\n                        </span>\r\n                    </p>\r\n                </section>\r\n            )}\r\n        </>\r\n  \r\n    )\r\n}\r\n\r\nexport default Register","C:\\individual projects\\blogspot\\src\\context\\AuthProvider.js",[],[],"C:\\individual projects\\blogspot\\src\\styles\\GlobalStyles.style.js",[],[],"C:\\individual projects\\blogspot\\src\\components\\Navbar.js",[],[],"C:\\individual projects\\blogspot\\src\\styles\\variables.js",[],[],"C:\\individual projects\\blogspot\\src\\styles\\Button.style.js",[],[],"C:\\individual projects\\blogspot\\src\\components\\SearchBar.js",[],[],"C:\\individual projects\\blogspot\\src\\styles\\Input.style.js",[],[],{"ruleId":"95","severity":1,"message":"96","line":3,"column":49,"nodeType":"97","messageId":"98","endLine":3,"endColumn":53},{"ruleId":"95","severity":1,"message":"99","line":1,"column":10,"nodeType":"97","messageId":"98","endLine":1,"endColumn":15},{"ruleId":"95","severity":1,"message":"100","line":6,"column":18,"nodeType":"97","messageId":"98","endLine":6,"endColumn":25},{"ruleId":"95","severity":1,"message":"101","line":7,"column":12,"nodeType":"97","messageId":"98","endLine":7,"endColumn":21},{"ruleId":"95","severity":1,"message":"102","line":7,"column":23,"nodeType":"97","messageId":"98","endLine":7,"endColumn":35},{"ruleId":"95","severity":1,"message":"103","line":8,"column":12,"nodeType":"97","messageId":"98","endLine":8,"endColumn":23},{"ruleId":"95","severity":1,"message":"104","line":8,"column":25,"nodeType":"97","messageId":"98","endLine":8,"endColumn":39},{"ruleId":"105","severity":1,"message":"106","line":10,"column":40,"nodeType":"107","messageId":"108","endLine":10,"endColumn":41,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":11,"column":21,"nodeType":"107","messageId":"112","endLine":11,"endColumn":471},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'setAuth' is assigned a value but never used.","'postTitle' is assigned a value but never used.","'setPostTitle' is assigned a value but never used.","'postContent' is assigned a value but never used.","'setPostContent' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["113","114"],"no-control-regex","Unexpected control character(s) in regular expression: \\x01, \\x08, \\x0b, \\x0c, \\x0e, \\x1f, \\x01, \\x09, \\x0b, \\x0c, \\x0e, \\x01, \\x08, \\x0b, \\x0c, \\x0e, \\x1f, \\x01, \\x09, \\x0b, \\x0c, \\x0e.","unexpected",{"messageId":"115","fix":"116","desc":"117"},{"messageId":"118","fix":"119","desc":"120"},"removeEscape",{"range":"121","text":"122"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"123","text":"124"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[472,473],"",[472,472],"\\"]